{"version":3,"sources":["components/pomodoro/PomodoroTimer.js","components/pomodoro/PomodoroControls.js","components/pomodoro/Pomodoro.js","components/todoList/Todo.js","components/todoList/NewTodoForm.js","components/todoList/TodoList.js","components/navbar/Navbar.js","components/navbar/Settings.js","components/PomoTodo.js","App.js","serviceWorker.js","index.js"],"names":["PomodoroTimer","props","state","minutes","initialMinutes","seconds","countdown","bind","setInterval","newState","isPaused","setState","this","classes","isWorking","parsedSeconds","toString","className","clock","message","console","log","Component","defaultProps","withStyles","fontSize","marginBottom","height","display","flexDirection","justifyContent","marginTop","PomodoroControls","workTime","restTime","isEditing","toggleEdit","handleChange","handlePlay","event","preventDefault","changeTime","target","name","parseInt","value","togglePlay","htmlFor","type","onChange","onClick","class","border","color","backgroundColor","Pomodoro","newTime","changed","width","borderRadius","Todo","handleDelete","handleToggle","removeTodo","id","toggleTodo","toggleEditTodo","editTodo","doneStyle","desc","done","textDecoration","fontStyle","onBlur","autofocus","style","onDoubleClick","delete","alignItems","padding","textAlign","margin","marginRight","NewTodoForm","handleSubmit","newTodo","uuid","addTodo","onSubmit","placeholder","justifySelf","borderBottom","paddingLeft","TodoList","todos","delTodoId","filter","t","doneTodoId","newTodos","map","todo","editTodoId","newDesc","length","key","flexGrow","paddingTop","Navbar","handleClick","toggleSettings","showSettings","Icon","cursor","Settings","settingsGroup","Checkbox","checkbox","href","size","githubIcon","PomoTodo","Fragment","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b5829604.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n  PomodoroTimer: {\r\n    fontSize: \"3em\",\r\n    marginBottom: \"0\",\r\n    height: \"4.25em\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  clock: {\r\n    marginBottom: \"0\",\r\n    marginTop: \"0\",\r\n  },\r\n  message: {\r\n    fontSize: \"17px\",\r\n    marginTop: \"0\",\r\n  },\r\n};\r\n\r\nclass PomodoroTimer extends Component {\r\n  static defaultProps = {\r\n    initialMinutes: 45,\r\n    seconds: 0,\r\n    isPaused: true,\r\n    isWorking: true,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minutes: this.props.initialMinutes,\r\n      seconds: 0,\r\n    };\r\n    this.countdown = this.countdown.bind(this);\r\n  }\r\n\r\n  countdown() {\r\n    setInterval(() => {\r\n      if (this.props.isPaused) {\r\n        return;\r\n      }\r\n      let newState;\r\n      if (this.state.seconds === 0) {\r\n        newState = { minutes: this.state.minutes - 1, seconds: 59 };\r\n      } else {\r\n        newState = { seconds: this.state.seconds - 1 };\r\n      }\r\n      this.setState(newState);\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    const { classes, isWorking } = this.props;\r\n    const { minutes, seconds } = this.state;\r\n    let parsedSeconds = seconds;\r\n    if (parsedSeconds < 10) {\r\n      parsedSeconds = \"0\" + seconds.toString(10);\r\n    }\r\n    return (\r\n      <div className={classes.PomodoroTimer}>\r\n        <h2 className={classes.clock}>\r\n          {minutes} : {parsedSeconds}\r\n        </h2>\r\n        <span className={classes.message}>\r\n          {isWorking ? \"Time to get to work!\" : \"Time for a break!\"}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.countdown();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Updated\");\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PomodoroTimer);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n  PomodoroControls: {\r\n    height: \"2.5em\",\r\n    \"& button\": {\r\n      fontSize: \"1.75em\",\r\n      border: \"none\",\r\n      color: \"#eeeeee\",\r\n      backgroundColor: \"#353535\",\r\n    },\r\n  },\r\n};\r\n\r\nclass PomodoroControls extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      workTime: 45,\r\n      restTime: 15,\r\n      isEditing: false,\r\n    };\r\n    this.toggleEdit = this.toggleEdit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handlePlay = this.handlePlay.bind(this);\r\n  }\r\n\r\n  toggleEdit(event) {\r\n    event.preventDefault();\r\n    this.props.changeTime(this.state);\r\n    this.setState({ ...this.state, isEditing: !this.state.isEditing });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: parseInt(event.target.value),\r\n    });\r\n  }\r\n\r\n  handlePlay() {\r\n    this.props.togglePlay();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.PomodoroControls}>\r\n        {this.state.isEditing ? (\r\n          <form>\r\n            <div>\r\n              <label htmlFor=\"workTime\">Work: </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"workTime\"\r\n                value={this.state.workTime}\r\n                onChange={this.handleChange}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"restTime\">Rest: </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"restTime\"\r\n                value={this.state.restTime}\r\n                onChange={this.handleChange}\r\n              ></input>\r\n            </div>\r\n            <button onClick={this.toggleEdit}>Submit</button>\r\n          </form>\r\n        ) : (\r\n          <div>\r\n            <button onClick={this.handlePlay}>\r\n              {this.props.isPaused ? (\r\n                <i class=\"fas fa-play\"></i>\r\n              ) : (\r\n                <i class=\"fas fa-pause\"></i>\r\n              )}\r\n            </button>\r\n            {/* <button onClick={this.toggleEdit}>Edit</button> */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PomodoroControls);\r\n","import React, { Component } from \"react\";\r\nimport PomodoroTimer from \"./PomodoroTimer\";\r\nimport PomodoroControls from \"./PomodoroControls\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n  Pomodoro: {\r\n    width: \"100%\",\r\n    height: \"15em\",\r\n    color: \"#eeeeee\",\r\n    backgroundColor: \"#353535\",\r\n    borderRadius: \"0.5em\",\r\n  },\r\n};\r\n\r\nclass Pomodoro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      workTime: 45,\r\n      restTime: 15,\r\n      isPaused: true,\r\n    };\r\n    this.changeTime = this.changeTime.bind(this);\r\n    this.togglePlay = this.togglePlay.bind(this);\r\n  }\r\n\r\n  changeTime(newTime) {\r\n    // Setting custom time requires work still\r\n    // Can't get new set time into PomodoroClock\r\n    // as PomodoroClock just keeps the old time and only updates initial time\r\n    this.setState({\r\n      workTime: newTime.workTime,\r\n      restTime: newTime.restTime,\r\n      isPaused: true,\r\n      changed: true,\r\n    });\r\n  }\r\n\r\n  togglePlay() {\r\n    const newState = { ...this.state, isPaused: !this.state.isPaused };\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.Pomodoro}>\r\n        <PomodoroTimer\r\n          initialMinutes={this.state.workTime}\r\n          isPaused={this.state.isPaused}\r\n          changed={false}\r\n        />\r\n        <PomodoroControls\r\n          changeTime={this.changeTime}\r\n          workTime={this.state.workTime}\r\n          restTime={this.state.restTime}\r\n          togglePlay={this.togglePlay}\r\n          isPaused={this.state.isPaused}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Pomodoro);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n  Todo: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#dddddd\",\r\n    borderRadius: \"0.5em\",\r\n    color: \"#121212\",\r\n    padding: \"0.25em 0.5em\",\r\n    marginBottom: \"5px\",\r\n    \"& p\": {\r\n      width: \"22.5em\",\r\n      textAlign: \"left\",\r\n      fontSize: \"24px\",\r\n      margin: \"0\",\r\n      marginRight: \"0.25em\",\r\n    },\r\n    \"& button\": {\r\n      padding: \"4px 10px\",\r\n      color: \"#eeeeee\",\r\n      border: \"none\",\r\n      borderRadius: \"0.5em\",\r\n      fontSize: \"1.25em\",\r\n    },\r\n  },\r\n  done: {\r\n    backgroundColor: \"#03dac6\",\r\n    marginRight: \"0.25em\",\r\n  },\r\n  delete: {\r\n    backgroundColor: \"#cf6679\",\r\n  },\r\n};\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n    };\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n    this.toggleEdit = this.toggleEdit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleDelete(event) {\r\n    this.props.removeTodo(this.props.id);\r\n  }\r\n\r\n  handleToggle(event) {\r\n    this.props.toggleTodo(this.props.id);\r\n  }\r\n\r\n  toggleEdit() {\r\n    this.props.toggleEditTodo(this.props.id);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.editTodo(this.props.id, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const { classes, desc, isEditing } = this.props;\r\n\r\n    let doneStyle;\r\n    if (this.props.done) {\r\n      doneStyle = {\r\n        textDecoration: \"line-through\",\r\n        fontStyle: \"italic\",\r\n        color: \"#999999\",\r\n      };\r\n    }\r\n    return (\r\n      <div className={classes.Todo}>\r\n        {isEditing ? (\r\n          <input\r\n            type=\"text\"\r\n            value={desc}\r\n            onChange={this.handleChange}\r\n            onBlur={this.toggleEdit}\r\n            autofocus\r\n          ></input>\r\n        ) : (\r\n          <p style={doneStyle} onDoubleClick={this.toggleEdit}>\r\n            {desc}\r\n          </p>\r\n        )}\r\n\r\n        <button className={classes.done} onClick={this.handleToggle}>\r\n          <i class=\"fas fa-check\"></i>\r\n        </button>\r\n        <button className={classes.delete} onClick={this.handleDelete}>\r\n          <i class=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Todo);\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n  NewTodoForm: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    justifySelf: \"flex - end\",\r\n    height: \"3.5em\",\r\n    \"& input\": {\r\n      fontSize: \"1.5em\",\r\n      width: \"25rem\",\r\n      height: \"2rem\",\r\n      margin: \"0.25em auto\",\r\n      marginRight: \"0.25em\",\r\n      border: \"none\",\r\n      borderBottom: \"2px solid #eeeeee\",\r\n      paddingLeft: \"10px\",\r\n      backgroundColor: \"#121212\",\r\n      color: \"#eeeeee\",\r\n    },\r\n    \"& button\": {\r\n      height: \"3em\",\r\n      width: \"5em\",\r\n      border: \"none\",\r\n      backgroundColor: \"#121212\",\r\n      color: \"#eeeeee\",\r\n    },\r\n  },\r\n};\r\n\r\nclass NewTodoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      desc: \"\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const newTodo = {\r\n      desc: this.state.desc,\r\n      id: uuid(),\r\n      done: false,\r\n      isEditing: false,\r\n    };\r\n    this.props.addTodo(newTodo);\r\n    this.setState({ desc: \"\" });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <form className={classes.NewTodoForm} onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"desc\"></label>\r\n          <input\r\n            id=\"desc\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            name=\"desc\"\r\n            value={this.state.desc}\r\n            placeholder=\"Add New Todo\"\r\n          ></input>\r\n        </div>\r\n        <button>\r\n          <i class=\"fas fa-plus fa-2x\"></i>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NewTodoForm);\r\n","import React, { Component } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n  TodoList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-end\",\r\n    width: \"100%\",\r\n    flexGrow: \"1\",\r\n    paddingTop: \"0.5em\",\r\n  },\r\n  todos: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    flexGrow: \"1\",\r\n    color: \"#dddddd\",\r\n  },\r\n};\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n    };\r\n    this.addTodo = this.addTodo.bind(this);\r\n    this.removeTodo = this.removeTodo.bind(this);\r\n    this.toggleTodo = this.toggleTodo.bind(this);\r\n    this.toggleEditTodo = this.toggleEditTodo.bind(this);\r\n    this.editTodo = this.editTodo.bind(this);\r\n  }\r\n\r\n  addTodo(newTodo) {\r\n    this.setState({ todos: [...this.state.todos, newTodo] });\r\n  }\r\n\r\n  removeTodo(delTodoId) {\r\n    this.setState({\r\n      todos: this.state.todos.filter((t) => t.id !== delTodoId),\r\n    });\r\n  }\r\n\r\n  toggleTodo(doneTodoId) {\r\n    let newTodos = this.state.todos.map((todo) => {\r\n      if (todo.id === doneTodoId) {\r\n        return { ...todo, done: !todo.done };\r\n      }\r\n      return todo;\r\n    });\r\n    this.setState({ todos: newTodos });\r\n  }\r\n\r\n  toggleEditTodo(editTodoId) {\r\n    let newTodos = this.state.todos.map((todo) => {\r\n      if (todo.id === editTodoId) {\r\n        return { ...todo, isEditing: !todo.isEditing };\r\n      }\r\n      return todo;\r\n    });\r\n    this.setState({ todos: newTodos });\r\n  }\r\n\r\n  editTodo(editTodoId, newDesc) {\r\n    let newTodos = this.state.todos.map((todo) => {\r\n      if (todo.id === editTodoId) {\r\n        return { ...todo, desc: newDesc };\r\n      }\r\n      return todo;\r\n    });\r\n    this.setState({ todos: newTodos });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.TodoList}>\r\n        <div className={classes.todos}>\r\n          {this.state.todos.length === 0 ? (\r\n            <h3>What would you like to get done today?</h3>\r\n          ) : null}\r\n          {this.state.todos.map((t) => (\r\n            <Todo\r\n              desc={t.desc}\r\n              key={t.id}\r\n              id={t.id}\r\n              done={t.done}\r\n              removeTodo={this.removeTodo}\r\n              isEditing={t.isEditing}\r\n              toggleTodo={this.toggleTodo}\r\n              toggleEditTodo={this.toggleEditTodo}\r\n              editTodo={this.editTodo}\r\n            />\r\n          ))}\r\n        </div>\r\n        <NewTodoForm addTodo={this.addTodo} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TodoList);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst styles = {\r\n  Navbar: {\r\n    width: \"95%\",\r\n    height: \"4em\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    color: \"#eeeeee\",\r\n  },\r\n  Icon: {\r\n    color: \"#bbbbbb\",\r\n    fontSize: \"1.5em\",\r\n    cursor: \"pointer\",\r\n  },\r\n};\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.toggleSettings();\r\n  }\r\n\r\n  render() {\r\n    const { classes, showSettings } = this.props;\r\n\r\n    return (\r\n      <div className={classes.Navbar}>\r\n        <h1>PomoTodo</h1>\r\n        {showSettings ? (\r\n          <CloseIcon\r\n            className={classes.Icon}\r\n            fontSize=\"medium\"\r\n            onClick={this.handleClick}\r\n          />\r\n        ) : (\r\n          <SettingsIcon\r\n            className={classes.Icon}\r\n            fontSize=\"medium\"\r\n            onClick={this.handleClick}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nconst styles = {\r\n  Settings: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  settingsGroup: {\r\n    width: \"80%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  checkbox: {\r\n    color: \"white\",\r\n  },\r\n  githubIcon: {\r\n    padding: \"9px\",\r\n    color: \"white\",\r\n  },\r\n};\r\n\r\nclass Settings extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.Settings}>\r\n        <div className={classes.settingsGroup}>\r\n          <p>Timer Sounds</p>\r\n          <Checkbox className={classes.checkbox} color=\"primary\" />\r\n        </div>\r\n        <div className={classes.settingsGroup}>\r\n          <p>Save Todos to Browser</p>\r\n          <Checkbox className={classes.checkbox} color=\"primary\" />\r\n        </div>\r\n        <div className={classes.settingsGroup}>\r\n          <p>Github Repo</p>\r\n          <a href=\"https://github.com/frosty273\">\r\n            <GitHubIcon size=\"med\" className={classes.githubIcon} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Settings);\r\n","import React, { Component } from \"react\";\r\nimport Pomodoro from \"./pomodoro/Pomodoro\";\r\nimport TodoList from \"./todoList/TodoList\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Navbar from \"./navbar/Navbar\";\r\nimport Settings from \"./navbar/Settings\";\r\n\r\nconst styles = {\r\n  PomoTodo: {\r\n    height: \"100%\",\r\n    borderRadius: \"0.25em\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#121212\",\r\n    padding: \"0 0.5em\",\r\n  },\r\n};\r\n\r\nclass PomoTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showSettings: false,\r\n    };\r\n    this.toggleSettings = this.toggleSettings.bind(this);\r\n  }\r\n\r\n  toggleSettings() {\r\n    this.setState({\r\n      showSettings: !this.state.showSettings,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { showSettings } = this.state;\r\n\r\n    return (\r\n      <div className={classes.PomoTodo}>\r\n        <Navbar\r\n          toggleSettings={this.toggleSettings}\r\n          showSettings={showSettings}\r\n        />\r\n        {showSettings ? (\r\n          <Settings />\r\n        ) : (\r\n          <React.Fragment>\r\n            <Pomodoro />\r\n            <TodoList />\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PomoTodo);\r\n","import React from \"react\";\nimport PomoTodo from \"./components/PomoTodo\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PomoTodo />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}